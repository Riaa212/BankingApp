package com.bank.app.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.bank.app.helper.AccNumberGenerator;
import com.bank.app.proxy.AccountProxy;
import com.bank.app.repository.BankBranchRepo;
import com.bank.app.service.BankBranchService;
import com.bank.app.service.impl.AccountServiceImpl;
import com.bank.app.service.impl.TransactionServiceImpl;

@RestController
@RequestMapping("/account")
public class AccountController {

	@Autowired
	private AccountServiceImpl acc;
	
	@Autowired
	private BankBranchRepo brepo;
	
	//bank branch service
	@Autowired
	private BankBranchService branchService;
	
	@Autowired
	private AccNumberGenerator accGen;
	
	//transaction service
	@Autowired
	private TransactionServiceImpl transService;
	
	
	@PostMapping("/create") //working
	public ResponseEntity<?> createAccount(@RequestBody AccountProxy account)
	{
		return ResponseEntity.status(HttpStatus.ACCEPTED).body(acc.createAccount(account));
	}
	
	//deposit money
	@PostMapping("/deposit/{accNo}/{amount}")//working
	public ResponseEntity<?> deposit(@PathVariable("accNo") String accNo,@PathVariable("amount") Double amount)
	{		
		return ResponseEntity.status(HttpStatus.ACCEPTED).body(transService.deposit(amount, accNo));
	}
	
	//withdrawal money
	@PostMapping("/withdrawal") //working
	public ResponseEntity<?> withdrawal(String accNo,Double amount)
	{		
		return ResponseEntity.status(HttpStatus.ACCEPTED).body(transService.Withdrawal(amount, accNo));
	}

	//generate account number
	@GetMapping("/accNum") //working
	public ResponseEntity<?> generateAccNum()
	{		
		return ResponseEntity.status(HttpStatus.ACCEPTED).body(accGen.generateAccountNumber());
	}
	
	
	@PostMapping("/getUserByAcc/{accNo}")
	public ResponseEntity<?> getuserByAccNum(@PathVariable String accNo,@PathVariable String userId)
	{
		return ResponseEntity.status(HttpStatus.ACCEPTED).body(acc.getUserByAccountNum(accNo,userId));
	}
	
	//get total balance by account number
	@PostMapping("/getTotalBalance/{accNo}")
	public ResponseEntity<?> getTotalBalance(@PathVariable String accNo)
	{
		return ResponseEntity.status(HttpStatus.ACCEPTED).body(acc.totalBalance(accNo));
	}
	
}
